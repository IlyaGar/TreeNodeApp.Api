// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TreeNodeApp.DataAccess.Repository.Interface.Context;

#nullable disable

namespace TreeNodeApp.DataAccess.Repository.Interface.Migrations
{
    [DbContext(typeof(TreeNodeDbContext))]
    partial class TreeNodeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TreeNodeApp.DataAccess.Repository.Interface.UserJournals.Models.JournalException", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("EventId")
                        .HasColumnType("bigint");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RequestId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StackTrace")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("JournalExceptions");
                });

            modelBuilder.Entity("TreeNodeApp.DataAccess.Repository.Interface.UserTrees.Models.TreeNode", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long?>("TreeNodeId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TreeNodeId");

                    b.ToTable("TreeModels");
                });

            modelBuilder.Entity("TreeNodeApp.DataAccess.Repository.Interface.UserTrees.Models.TreeNode", b =>
                {
                    b.HasOne("TreeNodeApp.DataAccess.Repository.Interface.UserTrees.Models.TreeNode", null)
                        .WithMany("Children")
                        .HasForeignKey("TreeNodeId");
                });

            modelBuilder.Entity("TreeNodeApp.DataAccess.Repository.Interface.UserTrees.Models.TreeNode", b =>
                {
                    b.Navigation("Children");
                });
#pragma warning restore 612, 618
        }
    }
}
